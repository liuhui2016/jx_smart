<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    		http://www.springframework.org/schema/beans/spring-beans.xsd 
    		http://www.springframework.org/schema/tx 
    		http://www.springframework.org/schema/tx/spring-tx.xsd 
    		http://www.springframework.org/schema/jee 
    		http://www.springframework.org/schema/jee/spring-jee.xsd 
    		http://www.springframework.org/schema/context 
    		http://www.springframework.org/schema/context/spring-context.xsd"
    default-lazy-init="true">

    <description>Spring公共配置 </description>

    <!-- =================================================================== -->
    <!-- 定义受环境影响易变的变量 -->
    <!-- =================================================================== -->
    <bean class="com.game.util.PreferencesPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <!-- 标准配置 -->
                <value>classpath*:/application.properties</value>
            </list>
        </property>
    </bean>

    <!-- =================================================================== -->
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <!-- =================================================================== -->
    <context:component-scan base-package="com">
        <context:include-filter type="regex" expression=".game*" />
    </context:component-scan>

    <!-- =================================================================== -->
    <!-- SpringContext Holder -->
    <!-- =================================================================== -->
    <bean id="springContextHolder" class="com.game.modules.utils.SpringContextHolder" lazy-init="false" />

    <!-- =================================================================== -->
	<!-- 数据源/hibernate/事务配置 -->
	<!-- =================================================================== -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
		<property name="initialPoolSize" value="2" />
		<!-- 连接池中保留的最小连接数，默认为：3 -->
		<property name="minPoolSize" value="2" />
		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="15" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
		<property name="acquireIncrement" value="2" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 -->
		<property name="acquireRetryAttempts" value="0" />
		<!--重新尝试的时间间隔，默认为：1000毫秒 -->
		<property name="acquireRetryDelay" value="1000" />
		<!--最大空闲时间，3600秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
		<property name="maxIdleTime" value="3600" />
		<!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 
			0 -->
		<property name="maxStatements" value="0" />
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->
		<property name="maxStatementsPerConnection" value="0" />
		<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。测试的表必须在初始数据源的时候就存在。Default: 
			null -->
		<property name="preferredTestQuery" value="select 1" />
		<!--每1800秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="1800" />
		<!-- 获取连接时测试有效性，每次都验证连接是否可用 -->
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

    <!-- 数据源配置,使用应用服务器的数据库连接池,正式部署时采用,开发阶段使用mysql -->
    <!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" /> -->

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="namingStrategy">
            <bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.region.factory_class"> net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ehcache/ehcache-hibernate.xml</prop>

                <prop key="hibernate.hbm2ddl.auto">none</prop>
                <prop key="hibernate.query.substitutions">true 'Y', false 'N', yes 'Y', no 'N'</prop>
                <!-- for debug -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
            </props>
        </property>

        <property name="packagesToScan">
            <list>
                <value>com.game.entity</value>
                <value>com.game.comm.entity</value>
                <value>com.game.bmanager.entity</value>
                <value>com.game.copartner.entity</value>
                <value>com.game.smvc.entity</value>
            </list>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <list>
                        <ref bean="auditListener" />
                        <!-- 新建持久对象，拷贝id -->
                        <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
                    </list>
                </entry>
                <entry key="post-commit-update" value-ref="auditListener" />
                <entry key="post-commit-insert" value-ref="auditListener" />
                <entry key="post-commit-delete" value-ref="auditListener" />
            </map>
        </property>
    </bean>

    <bean id="auditListener" class="com.game.modules.orm.hibernate.AuditListener" />

    <!-- 事务管理器配置,单数据源事务 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- 使用annotation定义事务
        <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false" /> -->

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- =================================================================== -->
    <!-- Security class from Spring Security - used to configure Password -->
    <!-- Encryption in UserManagerImpl. -->
    <!-- =================================================================== -->
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

    <!-- =================================================================== -->
    <!-- 消息Queue管理器 -->
    <!-- =================================================================== -->
    <bean class="com.game.modules.queue.QueuesHolder">
        <property name="queueSize" value="10000" />
    </bean>

    <!-- =================================================================== -->
    <!-- LocalCache,支持限制总数,Idle time/LRU失效,持久化到磁盘等功能 -->
    <!-- Cache cache = ehcacheManager.getCache("contentInfoCache"); -->
    <!-- =================================================================== -->

    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml" />
    </bean>
    <!-- 时缓存，用于业务数据 -->
    <bean id="hourCache" class="com.game.modules.service.EhcachePool" lazy-init="false">
        <property name="cacheName" value="hourCache" />
        <property name="ehcacheManager" ref="ehcacheManager" />
    </bean>
    <!-- 日缓存，用于业务数据 -->
    <bean id="dayCache" class="com.game.modules.service.EhcachePool" lazy-init="false">
        <property name="cacheName" value="dayCache" />
        <property name="ehcacheManager" ref="ehcacheManager" />
    </bean>
    <!-- 半月缓存，用于dic数据 -->
    <bean id="halfMonthCache" class="com.game.modules.service.EhcachePool" lazy-init="false">
        <property name="cacheName" value="halfMonthCache" />
        <property name="ehcacheManager" ref="ehcacheManager" />
    </bean>

    <!-- =================================================================== -->
    <!-- 读出Queue中日志消息写入数据库的任务，即时初始化 -->
    <!-- batchSize:缓存上限，执行写入/测试为1 -->
    <!-- =================================================================== -->
    <bean id="logWriter" class="com.game.services.system.LogWriter" lazy-init="false">
        <property name="queueName" value="log" />
        <property name="batchSize" value="1" />
    </bean>
   
    <bean id="emailWriter" class="com.game.services.system.EmailWriter" lazy-init="false">
        <property name="queueName" value="email" />
    </bean>

    <!-- =================================================================== -->
    <!-- taskExecutor -->
    <!-- =================================================================== -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="30" />
        <property name="queueCapacity" value="35" />
    </bean>

    <!-- =================================================================== -->
    <!-- Bean校验器 -->
    <!-- =================================================================== -->
    <bean id="validatorManager" class="com.game.modules.service.ValidatorManager">
        <property name="actionValidatorManager">
            <bean class="com.game.modules.validator.CoreActionValidatorManager">
                <property name="validatorFileParser">
                    <bean class="com.game.modules.validator.CoreValidatorFileParser" />
                </property>
                <property name="validatorFactory">
                    <bean class="com.game.modules.validator.CoreValidatorFactory" />
                </property>
            </bean>
        </property>
    </bean>

</beans>